package edu.ohiou.imse.ise589;

import edu.ohiou.implanner.impClasses.*;
import javax.vecmath.*;
import java.util.*;

/**
 * <p>Title: ise 589 project for messge center, spring 02/03</p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: Ohio University</p>
 * @author Dusan N. Sormaz
 * @version 1.0
 */

public class BezierCurve extends ViewObject {
  List points = new LinkedList();
  int nsteps = 5;

  public BezierCurve(List points) {
    this.points = new LinkedList (points);
  }
  public static void main(String[] args) {
    Point3d p1 = new Point3d(0,0,0);
    Point3d p2 = new Point3d(1,1,0);
    Point3d p3 = new Point3d(2,1,0);
    Point3d p4 = new Point3d(3,0,0);
    LinkedList list = new LinkedList();
    list.add(p1);
    list.add(p2);
    list.add(p3);
    list.add(p4);
    BezierCurve bc = new BezierCurve(list);
    for (int i = 0; i < bc.nsteps+1; i++) {
      double u = (double) i / (double) bc.nsteps;
    System.out.println("u: " + u + ", point " + bc.calculatePoint(u));
    }
    bc.setApplet(new DrawWFApplet (bc));
    bc.display();
  }

  public Point3d calculatePoint (double u) {
    Point3d oldPoints [] = new Point3d [points.size()];
    for (int i=0; i < points.size(); i++) {
      oldPoints [i] = (Point3d) points.get(i);
    }
    Point3d oldStart, oldEnd;
    while (true) {
//      System.out.println("oldLength" + oldPoints.length);
      int newLength = oldPoints.length -1;
//      System.out.println("newLength" + newLength);
      Point3d newPoints [] = new Point3d [newLength];
      for (int i = 0; i < newLength; i++) {
        oldStart = new Point3d (oldPoints [i]);
        oldStart.scale(1-u);
        oldEnd = new Point3d (oldPoints [i+1]);
        oldEnd.scale(u);
        oldStart.add(oldEnd);
        newPoints [i] = new Point3d (oldStart);
      }
      if (newPoints.length == 1)
        return newPoints[0];
      else
        oldPoints = newPoints;
    }
  }
}